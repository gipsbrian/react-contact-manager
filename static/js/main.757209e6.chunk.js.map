{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","propType","PropType","object","isRequired","Contacts","console","log","Fragment","contacts_Contact","Header","branding","href","defaultProp","string","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classname","is-invalid","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0UAIMA,EAAUC,IAAMC,gBAMhBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAEFH,EAFL,CAGEK,SAAUL,EAAMK,SAASC,OACvB,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,YAGvC,IAAK,cACH,OAAON,OAAAC,EAAA,EAAAD,CAAA,GAEFH,EAFL,CAGEK,SAAQ,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,aAExC,IAAK,iBACH,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GAEFH,EAFL,CAGEK,SAAUL,EAAMK,SAASO,IACvB,SAAAL,GAAO,OACJA,EAAQC,GAAKP,EAAOQ,QAAQD,GACxBD,EAAUN,EAAOQ,QAClBF,MAGZ,QACE,OAAOP,IAIAa,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,MAAAH,EAAAZ,OAAAuB,EAAA,EAAAvB,CAAAU,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAR,OAAAY,MACEtB,MAAQ,CACNK,SAAU,GACVwB,SAAU,SAAA5B,GAAM,OAAIe,EAAKc,SAAS,SAAA9B,GAAK,OAAID,EAAQC,EAAOC,OAH9De,EAAA,OAAAb,OAAA4B,EAAA,EAAA5B,CAAAU,EAAAC,GAAAX,OAAA6B,EAAA,EAAA7B,CAAAU,EAAA,EAAAoB,IAAA,oBAAAC,MAAA,eAAAC,EAAAhC,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAQsBC,IAAMC,IAAI,8CARhC,OAQUN,EARVE,EAAAK,KASI9B,KAAKY,SAAS,CAAEzB,SAAUoC,EAAIQ,OATlC,wBAAAN,EAAAO,SAAAV,EAAAtB,SAAA,yBAAAiB,EAAAP,MAAAV,KAAAE,YAAA,KAAAa,IAAA,SAAAC,MAAA,WAkBI,OACEiB,EAAAb,EAAAc,cAACxD,EAAQiB,SAAT,CAAkBqB,MAAOhB,KAAKlB,OAC3BkB,KAAKmC,MAAMC,cApBpBzC,EAAA,CAA8B0C,aA0BjBC,EAAW5D,EAAQ4D,SC9D1BC,6MACJzD,MAAQ,CACN0D,iBAAiB,KAGnBC,oDAAgB,SAAAnB,EAAOhC,EAAIqB,GAAX,OAAAQ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEMC,IAAMc,OAAN,8CAAAlD,OAC8BF,IAHpC,OAAAmC,EAAAK,KAKZnB,EAAS,CAAE3B,KAAM,iBAAkBO,QAASD,IALhCmC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAkB,GAAAlB,EAAA,SAOZd,EAAS,CAAE3B,KAAM,iBAAkBO,QAASD,IAPhC,yBAAAmC,EAAAO,SAAAV,EAAAtB,KAAA,4IAWP,IAAA4C,EAAA5C,KAAA6C,EAC4B7C,KAAKmC,MAAM9C,QAAtCC,EADDuD,EACCvD,GAAIwD,EADLD,EACKC,KAAMC,EADXF,EACWE,MAAOC,EADlBH,EACkBG,MACjBR,EAAoBxC,KAAKlB,MAAzB0D,gBAER,OAEEP,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,uBACbhB,EAAAb,EAAAc,cAAA,UACGY,EAAM,IACPb,EAAAb,EAAAc,cAAA,KACEgB,QAAS,WACPN,EAAKhC,SAAS,CACZ4B,iBAAkBI,EAAK9D,MAAM0D,mBAGjCS,UAAU,mBACVE,MAAO,CAAEC,OAAQ,aAEnBnB,EAAAb,EAAAc,cAAA,KACEe,UAAU,eACVE,MAAO,CAAEC,OAAQ,UAAWC,MAAO,QAASC,MAAO,OACnDJ,QAASN,EAAKH,cAAcc,KAAKX,EAAMtD,EAAIqB,KAE7CsB,EAAAb,EAAAc,cAACsB,EAAA,EAAD,CAAMC,GAAE,gBAAAjE,OAAkBF,IACxB2C,EAAAb,EAAAc,cAAA,KACEe,UAAU,oBACVE,MAAO,CACLC,OAAQ,UACRC,MAAO,QACPC,MAAO,QACPI,YAAa,YAKpBlB,EACCP,EAAAb,EAAAc,cAAA,MAAIe,UAAU,cACZhB,EAAAb,EAAAc,cAAA,MAAIe,UAAU,mBAAd,UAAwCF,GACxCd,EAAAb,EAAAc,cAAA,MAAIe,UAAU,mBAAd,UAAwCD,IAExC,eA5DIX,aAqEtBE,EAAQoB,SAAW,CACjBtE,QAASuE,IAASC,OAAOC,YAGZvB,QCjDAwB,mLAtBX,OACE9B,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACA7B,EAAa6B,EAAb7B,SAER,OADA6E,QAAQC,IAAI9E,GAEV8C,EAAAb,EAAAc,cAACD,EAAAb,EAAM8C,SAAP,KACEjC,EAAAb,EAAAc,cAAA,MAAIe,UAAU,kBACZhB,EAAAb,EAAAc,cAAA,QAAMe,UAAU,eAAhB,WADF,QAIC9D,EAASO,IAAI,SAAAL,GAAO,OACnB4C,EAAAb,EAAAc,cAACiC,EAAD,CAASpD,IAAK1B,EAAQC,GAAID,QAASA,gBAhB5BgD,aCAjB+B,EAAS,SAAAjC,GAAS,IACdkC,EAAalC,EAAbkC,SACR,OACEpC,EAAAb,EAAAc,cAAA,OAAKe,UAAU,2DACbhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAAA,KAAGoC,KAAK,IAAIrB,UAAU,gBACnBoB,GAEHpC,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIe,UAAU,sBACZhB,EAAAb,EAAAc,cAAA,MAAIe,UAAU,YACZhB,EAAAb,EAAAc,cAACsB,EAAA,EAAD,CAAMC,GAAG,IAAIR,UAAU,YACrBhB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,gBADf,UAIFhB,EAAAb,EAAAc,cAAA,MAAIe,UAAU,YACZhB,EAAAb,EAAAc,cAACsB,EAAA,EAAD,CAAMC,GAAG,eAAeR,UAAU,YAChChB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,gBADf,SAIFhB,EAAAb,EAAAc,cAAA,MAAIe,UAAU,YACZhB,EAAAb,EAAAc,cAACsB,EAAA,EAAD,CAAMC,GAAG,SAASR,UAAU,YAC1BhB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,oBADf,gBAWdmB,EAAOG,YAAc,CACnBF,SAAU,UAGZD,EAAOT,SAAW,CAChBU,SAAUT,IAASY,OAAOV,YAGbM,iCCxCTK,EAAiB,SAAAC,GAQjB,IAPJC,EAOID,EAPJC,MACA7B,EAMI4B,EANJ5B,KACA9B,EAKI0D,EALJ1D,MACA4D,EAIIF,EAJJE,YACA5F,EAGI0F,EAHJ1F,KACA6F,EAEIH,EAFJG,SACAC,EACIJ,EADJI,MAEA,OACE7C,EAAAb,EAAAc,cAAA,OAAKe,UAAU,cACbhB,EAAAb,EAAAc,cAAA,SAAO6C,QAASjC,GAAO6B,GACvB1C,EAAAb,EAAAc,cAAA,SACElD,KAAMA,EACNiE,UAAW+B,IAAU,+BAAgC,CACnDC,aAAcH,IAEhBhC,KAAMA,EACN8B,YAAaA,EACb5D,MAAOA,EACP6D,SAAUA,IAEXC,GAAS7C,EAAAb,EAAAc,cAAA,OAAKe,UAAU,oBAAoB6B,KAenDL,EAAeS,aAAe,CAC5BlG,KAAM,OAGOyF,QCqEAU,6MA3GbrG,MAAQ,CACNgE,KAAM,GACNC,MAAO,GACPC,MAAO,GACPoC,OAAQ,MAGVC,+CAAW,SAAA/D,EAAOX,EAAU2E,GAAjB,IAAAC,EAAAzC,EAAAC,EAAAC,EAAAwC,EAAAjE,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACT2D,EAAEG,iBADOF,EAEsBzF,EAAKhB,MAA5BgE,EAFCyC,EAEDzC,KAAMC,EAFLwC,EAEKxC,MAAOC,EAFZuC,EAEYvC,MAGR,KAATF,EALK,CAAArB,EAAAE,KAAA,eAMP7B,EAAKc,SAAS,CAAEwE,OAAQ,CAAEtC,KAAM,sBANzBrB,EAAAiE,OAAA,oBAUK,KAAV3C,EAVK,CAAAtB,EAAAE,KAAA,eAWP7B,EAAKc,SAAS,CAAEwE,OAAQ,CAAErC,MAAO,uBAX1BtB,EAAAiE,OAAA,oBAeK,KAAV1C,EAfK,CAAAvB,EAAAE,KAAA,gBAgBP7B,EAAKc,SAAS,CAAEwE,OAAQ,CAAEpC,MAAO,uBAhB1BvB,EAAAiE,OAAA,yBAoBHF,EAAa,CACjB1C,OACAC,QACAC,SAvBOvB,EAAAE,KAAA,GAyBSC,IAAM+D,KACtB,6CACAH,GA3BO,QAyBHjE,EAzBGE,EAAAK,KA8BTnB,EAAS,CAAE3B,KAAM,cAAeO,QAASgC,EAAIQ,OAG7CjC,EAAKc,SAAS,CACZkC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPoC,OAAQ,KAGVtF,EAAKqC,MAAMyD,QAAQC,KAAK,KAxCf,yBAAApE,EAAAO,SAAAV,EAAAtB,mEA2CX6E,SAAW,SAAAS,GAAC,OAAIxF,EAAKc,SAAL3B,OAAA6G,EAAA,EAAA7G,CAAA,GAAiBqG,EAAES,OAAOjD,KAAOwC,EAAES,OAAO/E,iFAEjD,IAAA4B,EAAA5C,KAAAgG,EACgChG,KAAKlB,MAApCiE,EADDiD,EACCjD,MAAOD,EADRkD,EACQlD,KAAME,EADdgD,EACchD,MAAOoC,EADrBY,EACqBZ,OAE5B,OACEnD,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,eAAf,eACAhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAAA,QAAMmD,SAAUzC,EAAKyC,SAAS9B,KAAKX,EAAMjC,IACvCsB,EAAAb,EAAAc,cAAC+D,EAAD,CACEtB,MAAM,OACN7B,KAAK,OACL8B,YAAY,aACZ5D,MAAO8B,EACP+B,SAAUjC,EAAKiC,SACfC,MAAOM,EAAOtC,OAGhBb,EAAAb,EAAAc,cAAC+D,EAAD,CACEtB,MAAM,QACN7B,KAAK,QACL9D,KAAK,QACL4F,YAAY,cACZ5D,MAAO+B,EACP8B,SAAUjC,EAAKiC,SACfC,MAAOM,EAAOrC,QAGhBd,EAAAb,EAAAc,cAAC+D,EAAD,CACEtB,MAAM,QACN7B,KAAK,QACL8B,YAAY,cACZ5D,MAAOgC,EACP6B,SAAUjC,EAAKiC,SACfC,MAAOM,EAAOpC,QAGhBf,EAAAb,EAAAc,cAAA,SACElD,KAAK,SACLgC,MAAM,cACNiC,UAAU,0CAhGLZ,aC6HV6D,6MA5HbpH,MAAQ,CACNgE,KAAM,GACNC,MAAO,GACPC,MAAO,GACPoC,OAAQ,MAiBVC,+CAAW,SAAA/D,EAAOX,EAAU2E,GAAjB,IAAAC,EAAAzC,EAAAC,EAAAC,EAAAmD,EAAA7G,EAAAiC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACT2D,EAAEG,iBADOF,EAEsBzF,EAAKhB,MAA5BgE,EAFCyC,EAEDzC,KAAMC,EAFLwC,EAEKxC,MAAOC,EAFZuC,EAEYvC,MAGR,KAATF,EALK,CAAArB,EAAAE,KAAA,eAMP7B,EAAKc,SAAS,CAAEwE,OAAQ,CAAEtC,KAAM,sBANzBrB,EAAAiE,OAAA,oBAUK,KAAV3C,EAVK,CAAAtB,EAAAE,KAAA,eAWP7B,EAAKc,SAAS,CAAEwE,OAAQ,CAAErC,MAAO,uBAX1BtB,EAAAiE,OAAA,oBAeK,KAAV1C,EAfK,CAAAvB,EAAAE,KAAA,gBAgBP7B,EAAKc,SAAS,CAAEwE,OAAQ,CAAEpC,MAAO,uBAhB1BvB,EAAAiE,OAAA,yBAoBHS,EAAa,CACjBrD,OACAC,QACAC,SAGM1D,EAAOQ,EAAKqC,MAAMiE,MAAMC,OAAxB/G,GA1BCmC,EAAAE,KAAA,GA4BSC,IAAM0E,IAAN,8CAAA9G,OAC8BF,GAC9C6G,GA9BO,QA4BH5E,EA5BGE,EAAAK,KAiCTnB,EAAS,CAAE3B,KAAM,iBAAkBO,QAASgC,EAAIQ,OAGhDjC,EAAKc,SAAS,CACZkC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPoC,OAAQ,KAGVtF,EAAKqC,MAAMyD,QAAQC,KAAK,KA3Cf,yBAAApE,EAAAO,SAAAV,EAAAtB,mEA8CX6E,SAAW,SAAAS,GAAC,OAAIxF,EAAKc,SAAL3B,OAAA6G,EAAA,EAAA7G,CAAA,GAAiBqG,EAAES,OAAOjD,KAAOwC,EAAES,OAAO/E,qNA3DhD1B,EAAOU,KAAKmC,MAAMiE,MAAMC,OAAxB/G,YACUsC,IAAMC,IAAN,8CAAArC,OAC8BF,WAD1CiC,SAIAlC,EAAUkC,EAAIQ,KACpB/B,KAAKY,SAAS,CACZkC,KAAMzD,EAAQyD,KACdC,MAAO1D,EAAQ0D,MACfC,MAAO3D,EAAQ2D,2IAoDV,IAAAJ,EAAA5C,KAAAgG,EACgChG,KAAKlB,MAApCiE,EADDiD,EACCjD,MAAOD,EADRkD,EACQlD,KAAME,EADdgD,EACchD,MAAOoC,EADrBY,EACqBZ,OAE5B,OACEnD,EAAAb,EAAAc,cAACI,EAAD,KACG,SAAAtB,GAAS,IACAL,EAAaK,EAAbL,SACR,OACEsB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,eAAf,kBACAhB,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAAA,QAAMmD,SAAUzC,EAAKyC,SAAS9B,KAAKX,EAAMjC,IACvCsB,EAAAb,EAAAc,cAAC+D,EAAD,CACEtB,MAAM,OACN7B,KAAK,OACL8B,YAAY,aACZ5D,MAAO8B,EACP+B,SAAUjC,EAAKiC,SACfC,MAAOM,EAAOtC,OAGhBb,EAAAb,EAAAc,cAAC+D,EAAD,CACEtB,MAAM,QACN7B,KAAK,QACL9D,KAAK,QACL4F,YAAY,cACZ5D,MAAO+B,EACP8B,SAAUjC,EAAKiC,SACfC,MAAOM,EAAOrC,QAGhBd,EAAAb,EAAAc,cAAC+D,EAAD,CACEtB,MAAM,QACN7B,KAAK,QACL8B,YAAY,cACZ5D,MAAOgC,EACP6B,SAAUjC,EAAKiC,SACfC,MAAOM,EAAOpC,QAGhBf,EAAAb,EAAAc,cAAA,SACElD,KAAK,SACLgC,MAAM,iBACNiC,UAAU,0CAjHJZ,aCJXkE,EAAA,WACb,OACEtE,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAAA,mCACAD,EAAAb,EAAAc,cAAA,KAAGe,UAAU,QAAb,iCACAhB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,kBAAb,mBCLSuD,EAAA,WACb,OACEvE,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,MAAIe,UAAU,cACZhB,EAAAb,EAAAc,cAAA,QAAMe,UAAU,eAAhB,uBAEFhB,EAAAb,EAAAc,cAAA,KAAGe,UAAU,QAAb,qCCoESwD,6MAjDb3H,MAAQ,CACN4H,MAAO,GACPC,KAAM,uFAEY,IAAA/D,EAAA5C,KAElB4G,MAAM,gDACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAA9E,GAAI,OACRa,EAAKhC,SAAS,CACZ8F,MAAO3E,EAAK2E,MACZC,KAAM5E,EAAK4E,0CA2BV,IAAApB,EACiBvF,KAAKlB,MAArB4H,EADDnB,EACCmB,MAAOC,EADRpB,EACQoB,KACf,OACE1E,EAAAb,EAAAc,cAAA,WACED,EAAAb,EAAAc,cAAA,UAAKwE,GACLzE,EAAAb,EAAAc,cAAA,SAAIyE,WApEOtE,aCqCJ2E,gMAtBX,OACE/E,EAAAb,EAAAc,cAAC+E,EAAD,KACEhF,EAAAb,EAAAc,cAACgF,EAAA,EAAD,KACEjF,EAAAb,EAAAc,cAAA,OAAKe,UAAU,OACbhB,EAAAb,EAAAc,cAACiF,EAAD,CAAQ9C,SAAS,oBACjBpC,EAAAb,EAAAc,cAAA,OAAKe,UAAU,aACbhB,EAAAb,EAAAc,cAACkF,EAAA,EAAD,KACEnF,EAAAb,EAAAc,cAACmF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWzD,IACjC9B,EAAAb,EAAAc,cAACmF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAWrC,IAC5ClD,EAAAb,EAAAc,cAACmF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAWtB,IACjDjE,EAAAb,EAAAc,cAACmF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWjB,IACtCtE,EAAAb,EAAAc,cAACmF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWf,IACrCxE,EAAAb,EAAAc,cAACmF,EAAA,EAAD,CAAOG,UAAWhB,gBAdhBnE,cCHEoF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASxB,MACvB,2DCbNyB,IAASC,OAAO7F,EAAAb,EAAAc,cAAC6F,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvB,KAAK,SAAAwB,GACjCA,EAAaC","file":"static/js/main.757209e6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\n// This is the file we will have our global state\nconst Context = React.createContext();\n// const Consumer = Context.Consumer;\n\n// create a reducer method to handle of the actions form the components\n// action is an obj - {type & payload}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        // spread operator(...) to get the current state\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        // spread operator(...) to get the current state\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        // spread operator(...) to get the current state\n        ...state,\n        contacts: state.contacts.map(\n          contact =>\n            (contact.id = action.payload.id\n              ? (contact = action.payload)\n              : contact)\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount() {\n    // async & await method\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    this.setState({ contacts: res.data });\n\n    // synchronus method\n    // axios\n    //   .get(\"https://jsonplaceholder.typicode.com/users\")\n    //   .then(res => this.setState({ contacts: res.data }));\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n// export default (Consumer = Context.Consumer);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropType from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      const res = await axios.delete(\n        `https://jsonplaceholder.typicode.com/users/${id}`\n      );\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    } catch (e) {\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      // adding consumer to be able to access all the thing from the contex\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{\" \"}\n                <i\n                  onClick={() => {\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    });\n                  }}\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\"\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propType = {\n  contact: PropType.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n  //  the state has been moved\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          console.log(contacts);\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span>\n                List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropType from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProp = {\n  branding: \"My App\"\n};\n\nHeader.propType = {\n  branding: PropType.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classname from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        className={classname(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        name={name}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired\n};\n\nTextInputGroup.defaultProps = {\n  type: \"ext\"\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\n// import uuid from \"uuid\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is Required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is Required\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is Required\" } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    // clear state\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { email, name, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block..\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\n// import uuid from \"uuid\";\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n\n    // check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is Required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is Required\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is Required\" } });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n\n    // clear state\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { email, name, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Update Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block..\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div className=\"display-4\">\n      <h1>About Contact Manager</h1>\n      <p className=\"lead\">Simple App To Manage COntacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n\n// export default About;\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-04\">\n        <span className=\"text-danger\">404 Page Not Found</span>\n      </h1>\n      <p className=\"lead\"> Sorry, the page doe not exist!</p>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\n\nclass Test extends Component {\n  // making https requests\n  // state = {\n  //   contacts: [\n  //     {\n  //       id: 1,\n  //       name: \"John Doe\",\n  //       email: \"johndoe@gmail.com\",\n  //       phone: \"555-555-555\"\n  //     },\n  //     {\n  //       id: 2,\n  //       name: \"Gips Brian\",\n  //       email: \"gips@gmail.com\",\n  //       phone: \"444-444-444\"\n  //     },\n  //     {\n  //       id: 3,\n  //       name: \"Wiz Gips\",\n  //       email: \"wizgips@gmail.com\",\n  //       phone: \"333-333-333\"\n  //     }\n  //   ],\n  //   dispatch: action => this.setState(state => reducer(state, action))\n  // };\n  state = {\n    title: \"\",\n    body: \"\"\n  };\n  componentDidMount() {\n    // console.log(\"ComponentDidMount...\");\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          title: data.title,\n          body: data.body\n        })\n      );\n  }\n\n  //   componentWillMount() {\n  //     console.log(\"componentWillMount...\");\n  //   }\n\n  //   componentDidUpdate() {\n  //     console.log(\"componentDidUpdate...\");\n  //   }\n\n  //   componentWillReceiveProps(nextProps, nextState) {\n  //     console.log(\"componentWillReceiveProps...\");\n  //   }\n\n  //   static getDerivedStateFromProps(nextProps, prevState) {\n  //     return {\n  //       test: \"something\"\n  //     };\n  //   }\n\n  //   getSnapshotBeforeUpdate(nextProps, prevState) {\n  //     console.log(\"getSnapshotBeforeUpdate...\");\n  //   }\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\n// providers\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}